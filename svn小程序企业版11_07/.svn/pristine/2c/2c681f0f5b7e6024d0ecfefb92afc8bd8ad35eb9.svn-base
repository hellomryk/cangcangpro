// pages/dimensiondisease/dimensiondisease.js
var _this=null;
Page({

  /**
   * 页面的初始数据
   */
  data: {
list:[],
      bopenid:null,
      bid:null,
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
      _this = this;
      _this.setData({
        name: options.name,
          bid: options.bid,
          bopenid: options.bopenid,
      })
      wx.request({
          url: 'https://chronic-api-part.infobigdata.com/api/disease/report/getReport',
          data: {
             diseaseName: options.name
            //diseaseName: "喘息性支气管炎"
          },
          header: {
              'content-type': 'application/x-www-form-urlencoded' // 默认值application/x-www-form-urlencoded
          },
          method: "POST",
          success: function (res) {
              console.log(res.data.data.list)
              if (res.data.data.list){
                  _this.setData({
                      list: res.data.data.list
                  })
              }else{
                //   wx.showToast({
                //       title: "暂无此疾病信息！",
                //       icon: 'none',
                //       duration: 600
                //   })
                //   wx.switchTab({
                //       url: '/pages/znpgresult/znpgresult',
                //   })
              }


          }
      })
  },
// 跳转到报告页面
  gotobaogao() {
      wx.navigateTo({
          url: '/pages/baogao/baogao?bid=' + _this.data.id + '&bopenid=' + _this.data.bopenid,
      })
  },
  gotobaogaofan() {
    wx.navigateTo({
      url: 'pages/znpgresult/znpgresult',
    })
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})